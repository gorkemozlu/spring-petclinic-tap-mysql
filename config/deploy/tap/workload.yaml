#@ load("@ytt:data", "data") 
---
#@ if data.values.addToComponent:
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: #@ data.values.parentApp
  description: Gorkems Spring Petclinic App
  tags:
    - app-accelerator
    - spring
    - web
  annotations:
    'backstage.io/kubernetes-label-selector': #@ "app.kubernetes.io/part-of:" + data.values.parentApp
spec:
  type: service
  lifecycle: experimental
  owner: default-team
#@ end
---
#@ if data.values.addDB:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: petclinic-db
  app.kubernetes.io/part-of: #@ data.values.parentApp
  namespace: #@ data.values.namespaceToDeploy
  labels:
    app: petclinic-db
spec:
  selector:
    matchLabels:
      app: petclinic-db
  serviceName: petclinic-db
  template:
    metadata:
      labels:
        app: petclinic-db
    spec:
      containers:
      - name: petclinic-db
        image: mysql:5.7
        ports:
        - containerPort: 3306
          protocol: TCP
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value : "petclinic"
        - name: MYSQL_DATABASE
          value: "petclinic"
        - name: MYSQL_USER
          value: "petclinic"
        - name: MSQL_PASSWORD
          value: "petclinic"
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: sql-data
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 250m
            memory: 512Mi
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: sql-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: petclinic-db
  app.kubernetes.io/part-of: #@ data.values.parentApp
  namespace: #@ data.values.namespaceToDeploy
spec:
  ports:
  - name: mysql
    port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: petclinic-db
  type: ClusterIP
#@ end
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: #@ data.values.parentApp
  namespace: #@ data.values.namespaceToDeploy
  labels:
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/part-of: #@ data.values.parentApp
    #@ if data.values.hasTests:
    apps.tanzu.vmware.com/has-tests: "true"
    #@ end

spec:
  source:
    git:
      url: #@ data.values.gitRepo
      ref:
        branch: "main"

  #@ if data.values.addDB:
  serviceClaims:
    
    #@ if data.values.addDB:
    - name: #@ data.values.dbType + "-claim"
      ref:
        apiVersion: services.tanzu.vmware.com/v1alpha1
        kind: #@ data.values.dbType 
        name: #@ data.values.dbName
    #@ end
  #@ end